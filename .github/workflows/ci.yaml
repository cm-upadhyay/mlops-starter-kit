name: ML Deployment CI/CD

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main

jobs:
  build-and-test:
    name: Build, Test & Train
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Run Pytest and Train Model
        run: pytest > pytest_report.txt || (cat pytest_report.txt && exit 1)

      - name: Setup CML
        uses: iterative/setup-cml@v1

      - name: Create CML Report on PR
        if: github.event_name == 'pull_request'
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "## Pytest Results" > report.md
          echo "\`\`\`" >> report.md
          cat pytest_report.txt >> report.md
          echo "\`\`\`" >> report.md
          cml comment create --publish report.md

      - name: Upload Model Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: model-artifacts
          path: |
            iris_model.pkl
            metrics.json

  deploy-to-staging:
    name: Deploy to Staging
    needs: build-and-test
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Google Cloud Credentials
        run: |
          echo "${{ secrets.GCP_KEY_BASE64 }}" | base64 --decode > gcp_key.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcp_key.json" >> $GITHUB_ENV

      - name: Authenticate and Configure Docker
        run: |
          gcloud auth activate-service-account --key-file=gcp_key.json --project=${{ secrets.GCP_PROJECT_ID }}
          gcloud auth configure-docker ${{ vars.GCP_ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev

      - name: Download Model Artifacts
        uses: actions/download-artifact@v4
        with:
          name: model-artifacts

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image to Staging
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ vars.GCP_ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ vars.GCP_ARTIFACT_REGISTRY_REPO }}/ml-api:staging

      - name: Deploy to Staging GKE
        run: |
          gcloud container clusters get-credentials ${{ vars.GKE_STAGING_CLUSTER_NAME }} --location ${{ vars.GKE_CLUSTER_LOCATION }} --project ${{ secrets.GCP_PROJECT_ID }}
          IMAGE_PATH="${{ vars.GCP_ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ vars.GCP_ARTIFACT_REGISTRY_REPO }}/ml-api:staging"
          sed -i "s|IMAGE_PLACEHOLDER|$IMAGE_PATH|g" k8s/staging/deployment.yaml
          kubectl apply -f k8s/staging/deployment.yaml
          kubectl apply -f k8s/base/service.yaml

  deploy-to-production:
    name: Deploy to Production
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Google Cloud Credentials
        run: |
          echo "${{ secrets.GCP_KEY_BASE64 }}" | base64 --decode > gcp_key.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcp_key.json" >> $GITHUB_ENV

      - name: Authenticate and Configure Docker
        run: |
          gcloud auth activate-service-account --key-file=gcp_key.json --project=${{ secrets.GCP_PROJECT_ID }}
          gcloud auth configure-docker ${{ vars.GCP_ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev

      - name: Download Model Artifacts
        uses: actions/download-artifact@v4
        with:
          name: model-artifacts

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image to Production
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ vars.GCP_ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ vars.GCP_ARTIFACT_REGISTRY_REPO }}/ml-api:latest

      - name: Deploy to Production GKE
        run: |
          gcloud container clusters get-credentials ${{ vars.GKE_PRODUCTION_CLUSTER_NAME }} --location ${{ vars.GKE_CLUSTER_LOCATION }} --project ${{ secrets.GCP_PROJECT_ID }}
          IMAGE_PATH="${{ vars.GCP_ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ vars.GCP_ARTIFACT_REGISTRY_REPO }}/ml-api:latest"
          sed -i "s|IMAGE_PLACEHOLDER|$IMAGE_PATH|g" k8s/production/deployment.yaml
          kubectl apply -f k8s/production/deployment.yaml
          kubectl apply -f k8s/base/service.yaml
